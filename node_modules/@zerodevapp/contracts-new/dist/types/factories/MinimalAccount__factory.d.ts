import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MinimalAccount, MinimalAccountInterface } from "../MinimalAccount";
type MinimalAccountConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MinimalAccount__factory extends ContractFactory {
    constructor(...args: MinimalAccountConstructorParams);
    deploy(_entryPoint: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<MinimalAccount>;
    getDeployTransaction(_entryPoint: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): MinimalAccount;
    connect(signer: Signer): MinimalAccount__factory;
    static readonly bytecode = "0x60a0346100c657601f61151238819003918201601f19168301916001600160401b038311848410176100cb578084926020946040528339810103126100c657516001600160a01b03811681036100c6576080527f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd880546001600160a01b031916600117905560405161143090816100e28239608051818181610416015281816105e60152818161075f0152818161085b01528181610afb01528181610c1a0152610e190152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c8063150b7a021461011f5780631626ba7e146101165780633659cfe61461010d5780633a871cdd146101045780633e1b0812146100fb578063893d20e8146100f2578063940d3c60146100e9578063b0d691fe146100e0578063bc197c81146100d7578063c4d66de8146100ce578063d087d288146100c5578063f23a6e61146100bc5763f2fde38b0361000e576100b7610bca565b61000e565b506100b7610b3c565b506100b7610a78565b506100b7610974565b506100b76108b0565b506100b761080f565b506100b76106da565b506100b7610668565b506100b761053e565b506100b76104cf565b506100b76103c5565b506100b761032d565b506100b76101a1565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361014b57565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361014b57565b9181601f8401121561014b5782359167ffffffffffffffff831161014b576020838186019501011161014b57565b503461014b5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014b576101d9610128565b506101e2610150565b5060643567ffffffffffffffff811161014b57610203903690600401610173565b505060206040517f150b7a02000000000000000000000000000000000000000000000000000000008152f35b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176102a057604052565b6102a861022f565b604052565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff81116102e9575b01160190565b6102f161022f565b6102e3565b929192610302826102ad565b91610310604051938461025f565b82948184528183011161014b578281602093846000960137010152565b503461014b5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014b5760243567ffffffffffffffff811161014b573660238201121561014b5761039b61039360209236906024816004013591016102f6565b6004356112c9565b7fffffffff0000000000000000000000000000000000000000000000000000000060405191168152f35b503461014b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014b576103fd610128565b73ffffffffffffffffffffffffffffffffffffffff90817f000000000000000000000000000000000000000000000000000000000000000016331480156104a3575b801561049a575b61044f90610cd7565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2005b50333014610446565b50817f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd85416331461043f565b503461014b577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60608136011261014b576004359067ffffffffffffffff821161014b5761016090823603011261014b576105366020916044359060243590600401610dff565b604051908152f35b503461014b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014b5760043577ffffffffffffffffffffffffffffffffffffffffffffffff811680910361014b5761062990604051907f35567e1a000000000000000000000000000000000000000000000000000000008252306004830152602482015260208160448173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa90811561065b575b60009161062d575b506040519081529081906020820190565b0390f35b61064e915060203d8111610654575b610646818361025f565b810190610d62565b38610618565b503d61063c565b610663610d71565b610610565b503461014b5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014b57602073ffffffffffffffffffffffffffffffffffffffff7f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd85416604051908152f35b503461014b5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014b57610712610128565b60443567ffffffffffffffff811161014b57610732903690600401610173565b606492919235600281101561014b5760019061078f73ffffffffffffffffffffffffffffffffffffffff807f00000000000000000000000000000000000000000000000000000000000000001633149081156107e2575b50611234565b610798816112bf565b036107c3576107b2926107ac9136916102f6565b906113d0565b905b156107bb57005b602081519101fd5b6107dc926107d29136916102f6565b90602435906113a5565b906107b4565b90507f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd85416331438610789565b503461014b5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014b57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b9181601f8401121561014b5782359167ffffffffffffffff831161014b576020808501948460051b01011161014b57565b503461014b5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014b576108e8610128565b506108f1610150565b5067ffffffffffffffff60443581811161014b5761091390369060040161087f565b505060643581811161014b5761092d90369060040161087f565b505060843590811161014b57610947903690600401610173565b50506040517fbc197c81000000000000000000000000000000000000000000000000000000008152602090f35b503461014b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014b576109ac610128565b7f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd89081549073ffffffffffffffffffffffffffffffffffffffff808316610a1a577fffffffffffffffffffffffff000000000000000000000000000000000000000091169116179055600080f35b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f416c726561647920696e697469616c697a6564000000000000000000000000006044820152fd5b503461014b5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014b576106296040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201526000602482015260208160448173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa90811561065b5760009161062d57506040519081529081906020820190565b503461014b5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014b57610b74610128565b50610b7d610150565b5060843567ffffffffffffffff811161014b57610b9e903690600401610173565b505060206040517ff23a6e61000000000000000000000000000000000000000000000000000000008152f35b503461014b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014b57610c02610128565b73ffffffffffffffffffffffffffffffffffffffff807f00000000000000000000000000000000000000000000000000000000000000001633148015610cab575b8015610ca2575b610c5390610cd7565b7f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd891167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055600080f35b50333014610c4a565b50807f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd854163314610c43565b15610cde57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f6163636f756e743a206e6f742066726f6d20656e747279706f696e74206f722060448201527f6f776e6572206f722073656c66000000000000000000000000000000000000006064820152fd5b9081602091031261014b575190565b506040513d6000823e3d90fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561014b570180359067ffffffffffffffff821161014b5760200191813603831361014b57565b3d15610dfa573d90610de0826102ad565b91610dee604051938461025f565b82523d6000602084013e565b606090565b9073ffffffffffffffffffffffffffffffffffffffff91827f0000000000000000000000000000000000000000000000000000000000000000163303610ec057610e64610e5d610e51610e6a946111d2565b92610140810190610d7e565b36916102f6565b90610f1e565b7f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd8548216911603610eba5780610ea1575b50600090565b600080808093335af150610eb3610dcf565b5038610e9b565b50600190565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20656e747279706f696e74000000006044820152fd5b610f3391610f2b91611103565b919091610f7a565b90565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60051115610f7057565b610f78610f36565b565b610f8381610f66565b80610f8b5750565b610f9481610f66565b60018103610ffb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b61100481610f66565b6002810361106b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b80611077600392610f66565b1461107e57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b9060418151146000146111315761112d916020820151906060604084015193015160001a9061113b565b9091565b5050600090600290565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083116111c65791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa156111b9575b815173ffffffffffffffffffffffffffffffffffffffff811615610eba579190565b6111c1610d71565b611197565b50505050600090600390565b60405160208101917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008352603c820152603c81526060810181811067ffffffffffffffff821117611227575b60405251902090565b61122f61022f565b61121e565b1561123b57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f6163636f756e743a206e6f742066726f6d20656e747279706f696e74206f722060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152fd5b60021115610f7057565b9073ffffffffffffffffffffffffffffffffffffffff90817f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd854169282611313610f2b8484611103565b16841461137d5761132f9161132a610f2b926111d2565b611103565b1603611359577f1626ba7e0000000000000000000000000000000000000000000000000000000090565b7fffffffff0000000000000000000000000000000000000000000000000000000090565b505050507f1626ba7e0000000000000000000000000000000000000000000000000000000090565b916000928392602083519301915af1903d604051906020818301016040528082526000602083013e90565b6000918291602082519201905af4903d604051906020818301016040528082526000602083013e9056fea2646970667358221220fe8d185f175205225884c0c9d57d417eae1b998b8c582373f06068dc1a2cd09364736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IEntryPoint";
            readonly name: "_entryPoint";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidNonce";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newImplementation";
            readonly type: "address";
        }];
        readonly name: "Upgraded";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "entryPoint";
        readonly outputs: readonly [{
            readonly internalType: "contract IEntryPoint";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }, {
            readonly internalType: "enum Operation";
            readonly name: "operation";
            readonly type: "uint8";
        }];
        readonly name: "executeAndRevert";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint192";
            readonly name: "key";
            readonly type: "uint192";
        }];
        readonly name: "getNonce";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getNonce";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_owner";
            readonly type: "address";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_hash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "_signature";
            readonly type: "bytes";
        }];
        readonly name: "isValidSignature";
        readonly outputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "";
            readonly type: "bytes4";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "";
            readonly type: "uint256[]";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "";
            readonly type: "uint256[]";
        }, {
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "onERC1155BatchReceived";
        readonly outputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "";
            readonly type: "bytes4";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "onERC1155Received";
        readonly outputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "";
            readonly type: "bytes4";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "onERC721Received";
        readonly outputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "";
            readonly type: "bytes4";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_newImplementation";
            readonly type: "address";
        }];
        readonly name: "upgradeTo";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "initCode";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint256";
                readonly name: "callGasLimit";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "verificationGasLimit";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "preVerificationGas";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "maxFeePerGas";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "maxPriorityFeePerGas";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "paymasterAndData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "signature";
                readonly type: "bytes";
            }];
            readonly internalType: "struct UserOperation";
            readonly name: "userOp";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes32";
            readonly name: "userOpHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "missingFunds";
            readonly type: "uint256";
        }];
        readonly name: "validateUserOp";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly stateMutability: "payable";
        readonly type: "receive";
    }];
    static createInterface(): MinimalAccountInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MinimalAccount;
}
export {};

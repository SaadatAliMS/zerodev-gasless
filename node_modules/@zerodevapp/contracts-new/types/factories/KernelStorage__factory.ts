/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { KernelStorage, KernelStorageInterface } from "../KernelStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346100b757601f61078938819003918201601f19168301916001600160401b038311848410176100bc578084926020946040528339810103126100b757516001600160a01b03811681036100b7576080527f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd880546001600160a01b03191660011790556040516106b690816100d3823960805181818160b6015281816101f9015281816102bf015281816103f901526104cb0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60406080815260048036101561001457600080fd5b600091823560e01c9081633659cfe6146104755781633e1b081214610355578163893d20e8146102e3578163b0d691fe14610274578163d087d2881461017b575063f2fde38b1461006457600080fd5b346101775760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610177573573ffffffffffffffffffffffffffffffffffffffff80821680920361017357807f0000000000000000000000000000000000000000000000000000000000000000163314908115610146575b50801561013d575b6100f190610585565b7f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd8907fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905580f35b503330146100e8565b90507f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd854163314386100e0565b8280fd5b5080fd5b90503461017357827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610173578051917f35567e1a000000000000000000000000000000000000000000000000000000008352309083015282602483015260208260448173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa91821561026a578392610233575b6020838351908152f35b9091506020813d8211610262575b8161024e60209383610610565b810103126101735760209250519038610229565b3d9150610241565b81513d85823e3d90fd5b83903461017757817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610177576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b83903461017757817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101775760209073ffffffffffffffffffffffffffffffffffffffff7f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd854169051908152f35b8391503461017757602092837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261017357803577ffffffffffffffffffffffffffffffffffffffffffffffff8116809103610471578251917f35567e1a00000000000000000000000000000000000000000000000000000000835230908301526024820152838160448173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa928315610466578093610431575b505051908152f35b909192508382813d831161045f575b61044a8183610610565b8101031261045c575051908380610429565b80fd5b503d610440565b8251903d90823e3d90fd5b8380fd5b5050346101775760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610177573573ffffffffffffffffffffffffffffffffffffffff908181169182820361047157807f0000000000000000000000000000000000000000000000000000000000000000163314908115610558575b50801561054f575b61050690610585565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8280a280f35b503330146104fd565b90507f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd854163314386104f5565b1561058c57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f6163636f756e743a206e6f742066726f6d20656e747279706f696e74206f722060448201527f6f776e6572206f722073656c66000000000000000000000000000000000000006064820152fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761065157604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212203f7ffbb7dde87f6305f473a4d9e6d1de50f3fe5ad16a5c3d4e14be47af67c89464736f6c63430008110033";

type KernelStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KernelStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KernelStorage__factory extends ContractFactory {
  constructor(...args: KernelStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KernelStorage> {
    return super.deploy(_entryPoint, overrides || {}) as Promise<KernelStorage>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override attach(address: string): KernelStorage {
    return super.attach(address) as KernelStorage;
  }
  override connect(signer: Signer): KernelStorage__factory {
    return super.connect(signer) as KernelStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KernelStorageInterface {
    return new utils.Interface(_abi) as KernelStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KernelStorage {
    return new Contract(address, _abi, signerOrProvider) as KernelStorage;
  }
}

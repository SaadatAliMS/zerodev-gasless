/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ECDSAKernelFactory,
  ECDSAKernelFactoryInterface,
} from "../ECDSAKernelFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract KernelFactory",
        name: "_singletonFactory",
        type: "address",
      },
      {
        internalType: "contract ECDSAValidator",
        name: "_validator",
        type: "address",
      },
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "createAccount",
    outputs: [
      {
        internalType: "contract EIP1967Proxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getAccountAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "singletonFactory",
    outputs: [
      {
        internalType: "contract KernelFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validator",
    outputs: [
      {
        internalType: "contract ECDSAValidator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0346100bd57601f61066f38819003918201601f19168301916001600160401b038311848410176100c2578084926060946040528339810103126100bd5780516001600160a01b03919082811681036100bd5760208201519183831683036100bd576040015192831683036100bd5760805260a05260c05260405161059690816100d9823960805181818160a2015281816101fa01526103ab015260a0518181816101b3015281816102c80152610365015260c051816101140152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600436101561001457600080fd5b600091823560e01c9081630d253d76146102ec575080633a5381b51461027e5780635fbfb9cf14610138578063b0d691fe146100ca5763bc10273e1461005957600080fd5b346100c657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100c6576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b50346100c657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100c6576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b509034610268576101483661041f565b91909280517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060209560601b16858201526014815261018681610475565b6101db82519485927f296601cd0000000000000000000000000000000000000000000000000000000084527f000000000000000000000000000000000000000000000000000000000000000060048501610501565b0391848473ffffffffffffffffffffffffffffffffffffffff948184877f0000000000000000000000000000000000000000000000000000000000000000165af1938415610272578194610233575b50505191168152f35b909193508481813d831161026b575b61024c81836104c0565b810103126100c65751908282168203610268575091388061022a565b80fd5b503d610242565b509051903d90823e3d90fd5b50346100c657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100c6576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b828434610268576102fc3661041f565b9290937fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060209560601b16858201526014815261033881610475565b61038d82519485927f1bb12e690000000000000000000000000000000000000000000000000000000084527f000000000000000000000000000000000000000000000000000000000000000060048501610501565b0391848473ffffffffffffffffffffffffffffffffffffffff9481867f0000000000000000000000000000000000000000000000000000000000000000165afa9384156102725781946103e35750505191168152f35b909193508481813d8311610418575b6103fc81836104c0565b810103126100c65751908282168203610268575091848061022a565b503d6103f2565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60409101126104705760043573ffffffffffffffffffffffffffffffffffffffff81168103610470579060243590565b600080fd5b6040810190811067ffffffffffffffff82111761049157604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761049157604052565b9392919073ffffffffffffffffffffffffffffffffffffffff168452602060608186015281519182606087015260005b8381106105755750505060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000846040968a0101520116850101930152565b81810183015187820160800152820161053156fea164736f6c6343000812000a";

type ECDSAKernelFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ECDSAKernelFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ECDSAKernelFactory__factory extends ContractFactory {
  constructor(...args: ECDSAKernelFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _singletonFactory: PromiseOrValue<string>,
    _validator: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ECDSAKernelFactory> {
    return super.deploy(
      _singletonFactory,
      _validator,
      _entryPoint,
      overrides || {}
    ) as Promise<ECDSAKernelFactory>;
  }
  override getDeployTransaction(
    _singletonFactory: PromiseOrValue<string>,
    _validator: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _singletonFactory,
      _validator,
      _entryPoint,
      overrides || {}
    );
  }
  override attach(address: string): ECDSAKernelFactory {
    return super.attach(address) as ECDSAKernelFactory;
  }
  override connect(signer: Signer): ECDSAKernelFactory__factory {
    return super.connect(signer) as ECDSAKernelFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ECDSAKernelFactoryInterface {
    return new utils.Interface(_abi) as ECDSAKernelFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ECDSAKernelFactory {
    return new Contract(address, _abi, signerOrProvider) as ECDSAKernelFactory;
  }
}

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.TempKernel__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "contract IEntryPoint",
                name: "_entryPoint",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        stateMutability: "payable",
        type: "fallback",
    },
    {
        inputs: [],
        name: "entryPoint",
        outputs: [
            {
                internalType: "contract IEntryPoint",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getTempStorage",
        outputs: [
            {
                internalType: "address",
                name: "newTemplate",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IKernelValidator",
                name: "_defaultValidator",
                type: "address",
            },
            {
                internalType: "address",
                name: "_newTemplate",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "hash",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "isValidSignature",
        outputs: [
            {
                internalType: "bytes4",
                name: "",
                type: "bytes4",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "sender",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "nonce",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "initCode",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "uint256",
                        name: "callGasLimit",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "verificationGasLimit",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "preVerificationGas",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxFeePerGas",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxPriorityFeePerGas",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "paymasterAndData",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes",
                    },
                ],
                internalType: "struct UserOperation",
                name: "userOp",
                type: "tuple",
            },
            {
                internalType: "bytes32",
                name: "userOpHash",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "missingAccountFunds",
                type: "uint256",
            },
        ],
        name: "validateUserOp",
        outputs: [
            {
                internalType: "uint256",
                name: "validationData",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "version",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];
var _bytecode = "0x610160346200018457601f6200219138819003918201601f19168301926001600160401b03929091838511838610176200016e5781602092849260409788528339810103126200018457516001600160a01b038116810362000184578251620000688162000189565b600681526005602082016512d95c9b995b60d21b8152602086516200008d8162000189565b838152019264181718171960d91b845251902091208160e052610100948186524660a05280519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f948585528284015260608301524660808301523060a083015260a0825260c0820195828710908711176200016e578590525190206080523060c052610120908152610140918252611feb9384620001a6853960805184611996015260a05184611a4b015260c05184611967015260e051846119e501525183611a0b015251826119c201525181818161058001526110ff0152f35b634e487b7160e01b600052604160045260246000fd5b600080fd5b604081019081106001600160401b038211176200016e5760405256fe6080604052600436101561001e575b361561001c5761001c611ae6565b005b6000803560e01c90816306fdde0314610091575080631626ba7e1461008c5780633a871cdd146100875780634be5cd9f1461008257806354fd4d501461007d578063b0d691fe146100785763cf7a1d770361000e576105cd565b610535565b6104a6565b610427565b6103b9565b610332565b3461010357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610103576100c960c0604052565b60066080527f4b65726e656c000000000000000000000000000000000000000000000000000060a052604051806100ff8161029f565b0390f35b80fd5b600091031261011157565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff811161015957604052565b610116565b6080810190811067ffffffffffffffff82111761015957604052565b60c0810190811067ffffffffffffffff82111761015957604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761015957604052565b60405190610160820182811067ffffffffffffffff82111761015957604052565b604051906102058261015e565b565b67ffffffffffffffff811161015957601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b919082519283825260005b84811061028b5750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b60208183018101518483018201520161024c565b9060209182815260805192838183015260005b8481106102f15750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b60a08101518382016040015281016102b2565b9181601f840112156101115782359167ffffffffffffffff8311610111576020838186019501011161011157565b346101115760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101115760243567ffffffffffffffff81116101115761038f6103866020923690600401610304565b90600435611c8b565b7fffffffff0000000000000000000000000000000000000000000000000000000060405191168152f35b34610111577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc606081360112610111576004359067ffffffffffffffff8211610111576101609082360301126101115761041f60209160443590602435906004016110dd565b604051908152f35b346101115760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101115773ffffffffffffffffffffffffffffffffffffffff3054166040519061048a826104838160023001610aec565b0383610196565b6100ff6040519283928352604060208401526040830190610241565b346101115760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011157604051604081019080821067ffffffffffffffff831117610159576100ff91604052600581527f302e302e320000000000000000000000000000000000000000000000000000006020820152604051918291602083526020830190610241565b346101115760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011157602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b73ffffffffffffffffffffffffffffffffffffffff81160361011157565b3590610205826105a4565b346101115760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011157600435610608816105a4565b60243590610615826105a4565b60443567ffffffffffffffff811161011157610635903690600401610304565b909173ffffffffffffffffffffffffffffffffffffffff90817f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd95460501c166107b9576107ad6107b39461073b61001c976106fa857f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd9907fffff0000000000000000000000000000000000000000ffffffffffffffffffff7dffffffffffffffffffffffffffffffffffffffff0000000000000000000083549260501b169116179055565b309073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b6107498582600230016108be565b6107816040519586927f0c95955600000000000000000000000000000000000000000000000000000000602085015260248401610a1e565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101855284610196565b16611eb3565b50610a32565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a20616c726561647920696e697469616c697a6564000000006044820152fd5b90600182811c92168015610860575b602083101461083157565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691610826565b90601f811161087857505050565b600091825260208220906020601f850160051c830194106108b4575b601f0160051c01915b8281106108a957505050565b81815560010161089d565b9092508290610894565b90929167ffffffffffffffff8111610159576108e4816108de8454610817565b8461086a565b6000601f821160011461093b5781929394600092610930575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c1916179055565b0135905038806108fd565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082169461096e84600052602060002090565b91805b8781106109c757508360019596971061098f575b505050811b019055565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88560031b161c19910135169055388080610985565b90926020600181928686013581550194019101610971565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b916020610a2f9381815201916109df565b90565b15610a3957565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f6163636f756e743a20656e61626c65206661696c65642077697468206465666160448201527f756c7476616c696461746f7200000000000000000000000000000000000000006064820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9060009291805491610afd83610817565b918282526001938481169081600014610b5f5750600114610b1f575b50505050565b90919394506000526020928360002092846000945b838610610b4b575050505001019038808080610b19565b805485870183015294019385908201610b34565b91505060209495507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009193501683830152151560051b01019038808080610b19565b15610ba857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20656e747279506f696e74000000006044820152fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610111570180359067ffffffffffffffff82116101115760200191813603831361011157565b906004116101115790600490565b906024116101115760100190601490565b909291928360041161011157831161011157600401917ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0190565b906058116101115760380190602090565b909291928360581161011157831161011157605801917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa80190565b906024116101115760040190602090565b906038116101115760240190601490565b90600a116101115760040190600690565b9060101161011157600a0190600690565b90939293848311610111578411610111578101920390565b7fffffffff000000000000000000000000000000000000000000000000000000009035818116939260048110610d8e57505050565b60040360031b82901b16169150565b929192610da982610207565b91610db76040519384610196565b829481845281830111610111578281602093846000960137010152565b9080601f8301121561011157816020610a2f93359101610d9d565b91906101608382031261011157610e046101d7565b92610e0e816105c2565b84526020810135602085015260408101359167ffffffffffffffff928381116101115781610e3d918401610dd4565b604086015260608201358381116101115781610e5a918401610dd4565b60608601526080820135608086015260a082013560a086015260c082013560c086015260e082013560e08601526101008083013590860152610120808301358481116101115782610eac918501610dd4565b90860152610140928383013590811161011157610ec99201610dd4565b90830152565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009035818116939260148110610f0457505050565b60140360031b82901b16169150565b15610f1a57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f6163636f756e743a20656e61626c65206d6f646520656e61626c65206661696c60448201527f65640000000000000000000000000000000000000000000000000000000000006064820152fd5b3d15610fc9573d90610faf82610207565b91610fbd6040519384610196565b82523d6000602084013e565b606090565b6110c46040929594939560608352610fff60608401825173ffffffffffffffffffffffffffffffffffffffff169052565b6020810151608084015283810151611025610160918260a08701526101c0860190610241565b906110b16110636060850151937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa094858983030160c08a0152610241565b608085015160e088015260a085015192610100938489015260c08601519061012091828a015260e08701519461014095868b0152870151908901528501518488830301610180890152610241565b92015190848303016101a0850152610241565b9460208201520152565b90816020910312610111575190565b91909160009173ffffffffffffffffffffffffffffffffffffffff91611126837f0000000000000000000000000000000000000000000000000000000000000000163314610ba1565b61014080820161114861114261113c8386610c06565b90610c57565b90610d59565b6111523685610def565b907fffffffff0000000000000000000000000000000000000000000000000000000061118761114261113c6060890189610c06565b91168061126457505050926107ad610a2f979361124696936111ca6111c36111bc611235996111b63687610def565b95610c06565b8091610c76565b3691610d9d565b90820152610781847f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd95460501c16935b8061124c575b6040519687937f3a871cdd00000000000000000000000000000000000000000000000000000000602086015260248501610fce565b9050602080825183010191016110ce565b90611ee5565b600080808084335af15061125e610f9e565b50611200565b7c0200000000000000000000000000000000000000000000000000000000919399959297949850146000146113725761129d8882610c06565b6112a691610c65565b6112af91610ecf565b60601c976112bc91610c06565b906112c692611443565b6040517f0c959556000000000000000000000000000000000000000000000000000000006020820152949994919390928291611306919060248401610a1e565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810182526113369082610196565b611342908a8616611eb3565b5061134c90610f13565b369061135792610d9d565b90850152610a2f956107ad61124695610781611235966111fa565b5050505050505050600190565b35906020811061138d575090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9060200360031b1b1690565b60580190816058116113c857565b610abd565b60780190816078116113c857565b919082018092116113c857565b604090610a2f9492815281602082015201916109df565b7fffffffffffff0000000000000000000000000000000000000000000000000000903581811693926006811061143457505050565b60060360031b82901b16169150565b9092916114508185610cb1565b6114599161137f565b93611463856113ba565b61146e908383610cc2565b92909561147a816113ba565b611483826113cd565b61148e918486610d41565b6114979161137f565b966114a28385610cfd565b6114ab9161137f565b94836114b78187610d0e565b6114c091610ecf565b60601c6114ce368486610d9d565b8051602091820120604080517f3ce406685c1b3551d706d85a68afdaa49ac4e07b451ad9b8ff8b58c3ee9641768185019081527fffffffff000000000000000000000000000000000000000000000000000000008e1692820192909252606081019b909b5273ffffffffffffffffffffffffffffffffffffffff9390931660808b015260a0808b01919091528952977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0919061158b60c082610196565b519020611597906118fe565b7f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd95460501c73ffffffffffffffffffffffffffffffffffffffff16916115dc876113cd565b8d6115e6896113cd565b906115f0916113db565b6115fb91868c610d41565b6040517f333daf92000000000000000000000000000000000000000000000000000000008d8201529384926116349291602485016113e8565b0390810182526116449082610196565b61164d91611eb3565b80516116609250810189019089016110ce565b61166a8288610cfd565b6116739161137f565b7fffffffffffffffffffffffff00000000000000000000000000000000000000001661169e91611ee5565b996116a8856113cd565b906116b2916113db565b906116be918188610d41565b9690976116cb8688610d0e565b6116d491610ecf565b60601c6116e18789610c65565b6116ea91610ecf565b60601c906116f8888a610d1f565b611701916113ff565b60d01c9361170f898b610d30565b611718916113ff565b60d01c906117246101f8565b65ffffffffffff909616865265ffffffffffff9091169085015273ffffffffffffffffffffffffffffffffffffffff16604084015273ffffffffffffffffffffffffffffffffffffffff1660608301526117c9907fffffffff00000000000000000000000000000000000000000000000000000000166000527f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dda602052604060002090565b906118779181516020830151604084015160309190911b6bffffffffffff0000000000001665ffffffffffff9290921691909117606091821b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016178255919091015160019190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6118818486610c65565b61188a91610ecf565b60601c30600101906118d6919073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b6118e391600330016108be565b6118ec906113ba565b906118f692610cc2565b939093929190565b611906611950565b906040519060208201927f19010000000000000000000000000000000000000000000000000000000000008452602283015260428201526042815261194a8161015e565b51902090565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016301480611a48575b156119b8577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815261194a8161017a565b507f0000000000000000000000000000000000000000000000000000000000000000461461198f565b906020610a2f928181520190610aec565b6040513d6000823e3d90fd5b908160008237016000815290565b15611aa45750565b611ae2906040519182917f08c379a0000000000000000000000000000000000000000000000000000000008352602060048401526024830190610241565b0390fd5b305473ffffffffffffffffffffffffffffffffffffffff9081167f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8190557f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd95460501c821690813b156101115760405191827f0c95955600000000000000000000000000000000000000000000000000000000918282526000948591818381611b956002300160048301611a71565b03925af18015611c6f57611c78575b50611be5611bcc611bcc600130015473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b938416611c15575b506102059250819060405180611c038136611a8e565b03915af4611c0f610f9e565b90611a9c565b833b15611c745782906040519485918252818381611c396003300160048301611a71565b03925af1908115611c6f57610205938392611c56575b5090611bed565b80611c63611c6992610145565b80610106565b38611c4f565b611a82565b8280fd5b80611c63611c8592610145565b38611ba4565b91611235611d6292611d5d92611d5873ffffffffffffffffffffffffffffffffffffffff96611d2c611cf6897f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd95460501c1673ffffffffffffffffffffffffffffffffffffffff1690565b936040519586937f333daf92000000000000000000000000000000000000000000000000000000006020860152602485016113e8565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101845283610196565b611eb3565b611e28565b60208101514265ffffffffffff90911611611e025742611d99611d8e604084015165ffffffffffff1690565b65ffffffffffff1690565b10611e02575173ffffffffffffffffffffffffffffffffffffffff1616611dde577f1626ba7e0000000000000000000000000000000000000000000000000000000090565b7fffffffff0000000000000000000000000000000000000000000000000000000090565b50507fffffffff0000000000000000000000000000000000000000000000000000000090565b6040805167ffffffffffffffff929060608101848111828210176101595760009184918252828152826020820152015265ffffffffffff90818160a01c16908115611eab575b835194606086019081118682101761015957845273ffffffffffffffffffffffffffffffffffffffff8116855260d01c6020850152169082015290565b829150611e6e565b600091829182602083519301915af2906040519060203d8301016040523d82523d6000602084013e6102058284611a9c565b9073ffffffffffffffffffffffffffffffffffffffff908183169181168203611fd6578260d01c9065ffffffffffff809460a01c16938415611fce575b808260d01c9260a01c16918215611fc5575b808410611fbd575b5080821690851611611f95575b507fffffffffffff000000000000000000000000000000000000000000000000000079ffffffffffff00000000000000000000000000000000000000009160d01b169260a01b16171790565b92507fffffffffffff0000000000000000000000000000000000000000000000000000611f49565b925038611f3c565b91508091611f34565b935083611f22565b50505060019056fea164736f6c6343000812000a";
var isSuperArgs = function (xs) { return xs.length > 1; };
var TempKernel__factory = exports.TempKernel__factory = /** @class */ (function (_super) {
    __extends(TempKernel__factory, _super);
    function TempKernel__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    TempKernel__factory.prototype.deploy = function (_entryPoint, overrides) {
        return _super.prototype.deploy.call(this, _entryPoint, overrides || {});
    };
    TempKernel__factory.prototype.getDeployTransaction = function (_entryPoint, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _entryPoint, overrides || {});
    };
    TempKernel__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    TempKernel__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    TempKernel__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    TempKernel__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    TempKernel__factory.bytecode = _bytecode;
    TempKernel__factory.abi = _abi;
    return TempKernel__factory;
}(ethers_1.ContractFactory));

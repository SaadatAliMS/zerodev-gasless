"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERC165SessionKeyValidator__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes",
            },
        ],
        name: "disable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes",
            },
        ],
        name: "enable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "sessionKey",
                type: "address",
            },
            {
                internalType: "address",
                name: "kernel",
                type: "address",
            },
        ],
        name: "sessionKeys",
        outputs: [
            {
                internalType: "bool",
                name: "enabled",
                type: "bool",
            },
            {
                internalType: "bytes4",
                name: "selector",
                type: "bytes4",
            },
            {
                internalType: "bytes4",
                name: "interfaceId",
                type: "bytes4",
            },
            {
                internalType: "uint48",
                name: "validUntil",
                type: "uint48",
            },
            {
                internalType: "uint48",
                name: "validAfter",
                type: "uint48",
            },
            {
                internalType: "uint32",
                name: "addressOffset",
                type: "uint32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        name: "validateSignature",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "sender",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "nonce",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "initCode",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "uint256",
                        name: "callGasLimit",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "verificationGasLimit",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "preVerificationGas",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxFeePerGas",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxPriorityFeePerGas",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "paymasterAndData",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes",
                    },
                ],
                internalType: "struct UserOperation",
                name: "_userOp",
                type: "tuple",
            },
            {
                internalType: "bytes32",
                name: "_userOpHash",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "validateUserOp",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var _bytecode = "0x6080806040523461001657610bf2908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c9081630c959556146102dd57508063333daf921461022e5780633a871cdd146101bc578381638fc925aa1461014357506396ade1f91461005c57600080fd5b3461013f57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013f573573ffffffffffffffffffffffffffffffffffffffff9081811680910361013b5760243591821680920361013b578363ffffffff92849260c0965281602052828220908252602052205482519260ff8216151584527fffffffff00000000000000000000000000000000000000000000000000000000808360d81b1660208601528260b81b169084015265ffffffffffff808260481c1660608501528160781c16608084015260a81c1660a0820152f35b8380fd5b8280fd5b808484346101b35760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b35780359067ffffffffffffffff82116101b757610193913691016104cf565b6014116101b3573560601c82528160205280822033835260205281205580f35b5050fd5b505050fd5b509134610227577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc906060823601126102275783359167ffffffffffffffff831161022a5761016090833603011261022757506020926102209160243591016105c3565b9051908152f35b80fd5b5080fd5b50823461022757827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610227576024359067ffffffffffffffff82116102275750606492610284602092369085016104cf565b505051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600f60248201527f6e6f7420696d706c656d656e74656400000000000000000000000000000000006044820152fd5b929190503461013b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013b5767ffffffffffffffff81358181116104c75761032f90369084016104cf565b806014949294116104cb57806018116104cb5780601c116104cb57806022116104cb57806028116104cb57602c116104c75760c085019182118583101761049b575082526001835260208301917fffffffff000000000000000000000000000000000000000000000000000000008060188401351684528185019060148401351681526060850190601c84013560d01c82526080860192602285013560d01c845260a0870194602881013560e01c86523560601c885287602052808820338952602052872095511515947fffffffffffffff0000000000000000000000000000000000000000000000000060ff78ffffffff00000000000000000000000000000000000000000074ffffffffffff0000000000000000000000000000006effffffffffff00000000000000000068ffffffff000000000064ffffffff008d54975160d81c16975160b81c16975160481b16975160781b16975160a81b1697169116171717171717905580f35b8560416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8580fd5b8680fd5b9181601f840112156104fd5782359167ffffffffffffffff83116104fd57602083818601950101116104fd57565b600080fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761054357604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156104fd570180359067ffffffffffffffff82116104fd576020019181360383136104fd57565b6040805191602092838101947f19457468657265756d205369676e6564204d6573736167653a0a3332000000008652603c820152603c8152606081019467ffffffffffffffff908287108288111761054357868552825190209561062b610140850185610572565b979092881161054357610665877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8b01160183610502565b87825236888401116104fd57838861068e94608061069697013760806000998a92010152610b11565b919091610978565b73ffffffffffffffffffffffffffffffffffffffff80911685528484528285209082359081168091036104c75785528352818420549360ff85161561096e57606082016106e38184610572565b60049491941161013f577fffffffff000000000000000000000000000000000000000000000000000000009384808960d81b1691351603610911579061072891610572565b63ffffffff93919390818860a81c1691601483018181116108e45716908183116108e057811161013b579080879392039401357fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009081811695601481106108cb575b50505060248551809581937f01ffc9a70000000000000000000000000000000000000000000000000000000083528a60b81b16600483015260601c5afa9182156108bf578192610885575b50501561082857505079ffffffffffff00000000000000000000000000000000000000007fffffffffffff00000000000000000000000000000000000000000000000000008260881b169160281b161790565b6064925051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601a60248201527f646f6573206e6f7420737570706f727420696e746572666163650000000000006044820152fd5b9091508381813d83116108b8575b61089d8183610502565b8101031261022a5751908115158203610227575038806107d5565b503d610893565b508251903d90823e3d90fd5b60140360031b82901b1616935038808061078a565b8480fd5b6024867f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b6064868651907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601660248201527f6e6f7420737570706f727465642073656c6563746f72000000000000000000006044820152fd5b5050505050600190565b6005811015610ae257806109895750565b600181036109ef5760646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152fd5b60028103610a555760646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152fd5b600314610a5e57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b906041815114600014610b3f57610b3b916020820151906060604084015193015160001a90610b49565b9091565b5050600090600290565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311610bd95791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa15610bcc57815173ffffffffffffffffffffffffffffffffffffffff811615610bc6579190565b50600190565b50604051903d90823e3d90fd5b5050505060009060039056fea164736f6c6343000812000a";
var isSuperArgs = function (xs) { return xs.length > 1; };
var ERC165SessionKeyValidator__factory = exports.ERC165SessionKeyValidator__factory = /** @class */ (function (_super) {
    __extends(ERC165SessionKeyValidator__factory, _super);
    function ERC165SessionKeyValidator__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    ERC165SessionKeyValidator__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    ERC165SessionKeyValidator__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    ERC165SessionKeyValidator__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ERC165SessionKeyValidator__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ERC165SessionKeyValidator__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    ERC165SessionKeyValidator__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    ERC165SessionKeyValidator__factory.bytecode = _bytecode;
    ERC165SessionKeyValidator__factory.abi = _abi;
    return ERC165SessionKeyValidator__factory;
}(ethers_1.ContractFactory));

import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { TokenActions, TokenActionsInterface } from "../TokenActions";
type TokenActionsConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TokenActions__factory extends ContractFactory {
    constructor(...args: TokenActionsConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<TokenActions>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): TokenActions;
    connect(signer: Signer): TokenActions__factory;
    static readonly bytecode = "0x608080604052346100165761040c908161001c8239f35b600080fdfe608060408181526004908136101561001657600080fd5b600092833560e01c908482631888bfd7146102cd57505080637ca237e61461016a5763841892941461004757600080fd5b3461016657604491602061005a3661035d565b959087865197889485937fa9059cbb00000000000000000000000000000000000000000000000000000000855273ffffffffffffffffffffffffffffffffffffffff809316898601526024850152165af1801561015c576100b9578380f35b6020913d8311610154575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011684019184831067ffffffffffffffff84111761012657505260209082018290031261012257518015150361011f573880808380f35b80fd5b5080fd5b6041907f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b3d92506100c4565b82513d86823e3d90fd5b8280fd5b5090346101665760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101665780359173ffffffffffffffffffffffffffffffffffffffff8084168094036102c8576044359081168091036102c85784936084359067ffffffffffffffff928383116102c457366023840112156102c457828601359384116102c45736602485850101116102c457813b156102c4578660c46024977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8885998b519c8d9a8b998a977ff242432a00000000000000000000000000000000000000000000000000000000895230908901528288015281356044880152606435606488015260a060848801528260a4880152018686013785858286010152011681010301925af19081156102bb57506102ab5750f35b6102b4906103bc565b61011f5780f35b513d84823e3d90fd5b8680fd5b600080fd5b91509234610122576102de3661035d565b909273ffffffffffffffffffffffffffffffffffffffff809316803b15610359578794606494869488947f23b872dd000000000000000000000000000000000000000000000000000000008752309087015216602485015260448401525af19081156102bb575061034d575080f35b610356906103bc565b80f35b8580fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126102c85773ffffffffffffffffffffffffffffffffffffffff60043581811681036102c857916024359160443590811681036102c85790565b67ffffffffffffffff81116103d057604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea164736f6c6343000812000a";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_to";
            readonly type: "address";
        }];
        readonly name: "transfer20Action";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "transferERC1155Action";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_to";
            readonly type: "address";
        }];
        readonly name: "transferERC721Action";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): TokenActionsInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): TokenActions;
}
export {};

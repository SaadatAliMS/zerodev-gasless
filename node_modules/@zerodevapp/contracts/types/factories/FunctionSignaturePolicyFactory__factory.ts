/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  FunctionSignaturePolicyFactory,
  FunctionSignaturePolicyFactoryInterface,
} from "../FunctionSignaturePolicyFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "policy",
        type: "address",
      },
    ],
    name: "NewPolicy",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "sig",
            type: "bytes4",
          },
        ],
        internalType: "struct Policy[]",
        name: "_policies",
        type: "tuple[]",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "contract FunctionSignaturePolicy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "sig",
            type: "bytes4",
          },
        ],
        internalType: "struct Policy[]",
        name: "_policies",
        type: "tuple[]",
      },
    ],
    name: "getPolicy",
    outputs: [
      {
        internalType: "contract FunctionSignaturePolicy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b33806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806329a254081461003b578063f1533a3214610077575b600080fd5b61004e610049366004610398565b61008a565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61004e610085366004610398565b610216565b6000806040518060200161009d906102e4565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190526100de9085906020016104b8565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261011a929160200161056f565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181528282527f5a65726f44657600000000000000000000000000000000000000000000000000602080850191909152825160078186030181526027850184528051908201208251828401207fff0000000000000000000000000000000000000000000000000000000000000060478701527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b166048870152605c8601829052607c8087019190915284518087039091018152609c9095019093528351930192909220919250905b949350505050565b60008060405160200161024c907f5a65726f44657600000000000000000000000000000000000000000000000000815260070190565b604051602081830303815290604052805190602001208360405161026f906102e4565b61027991906104b8565b8190604051809103906000f5905080158015610299573d6000803e3d6000fd5b5060405190915073ffffffffffffffffffffffffffffffffffffffff8216907fb857299202a657d72a2fc1f4158e01a32d5782d9fa9831f3108af13948e6c2a090600090a292915050565b6105798061058583390190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610343576103436102f1565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610390576103906102f1565b604052919050565b600060208083850312156103ab57600080fd5b823567ffffffffffffffff808211156103c357600080fd5b818501915085601f8301126103d757600080fd5b8135818111156103e9576103e96102f1565b6103f7848260051b01610349565b818152848101925060069190911b83018401908782111561041757600080fd5b928401925b818410156104ad57604084890312156104355760008081fd5b61043d610320565b843573ffffffffffffffffffffffffffffffffffffffff811681146104625760008081fd5b8152848601357fffffffff00000000000000000000000000000000000000000000000000000000811681146104975760008081fd5b818701528352604093909301929184019161041c565b979650505050505050565b602080825282518282018190526000919060409081850190868401855b82811015610532578151805173ffffffffffffffffffffffffffffffffffffffff1685528601517fffffffff00000000000000000000000000000000000000000000000000000000168685015292840192908501906001016104d5565b5091979650505050505050565b6000815160005b818110156105605760208185018101518683015201610546565b50600093019283525090919050565b600061020e61057e838661053f565b8461053f56fe608060405234801561001057600080fd5b5060405161057938038061057983398101604081905261002f9161014f565b60005b81518110156100da57600160008084848151811061005257610052610249565b6020026020010151600001516001600160a01b03166001600160a01b03168152602001908152602001600020600084848151811061009257610092610249565b6020908102919091018101518101516001600160e01b0319168252810191909152604001600020805460ff1916911515919091179055806100d28161025f565b915050610032565b5050610286565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715610119576101196100e1565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610147576101476100e1565b604052919050565b6000602080838503121561016257600080fd5b82516001600160401b038082111561017957600080fd5b818501915085601f83011261018d57600080fd5b81518181111561019f5761019f6100e1565b6101ad848260051b0161011f565b818152848101925060069190911b8301840190878211156101cd57600080fd5b928401925b8184101561023e57604084890312156101eb5760008081fd5b6101f36100f7565b84516001600160a01b038116811461020b5760008081fd5b8152848601516001600160e01b0319811681146102285760008081fd5b81870152835260409390930192918401916101d2565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161027f57634e487b7160e01b600052601160045260246000fd5b5060010190565b6102e4806102956000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80639232d2331461003b578063940d3c601461007a575b600080fd5b61006661004936600461013a565b600060208181529281526040808220909352908152205460ff1681565b604051901515815260200160405180910390f35b610066610088366004610196565b6000841561009857506000610108565b60006100a7600482868861023c565b6100b091610266565b73ffffffffffffffffffffffffffffffffffffffff88166000908152602081815260408083207fffffffff000000000000000000000000000000000000000000000000000000009094168352929052205460ff169150505b95945050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461013557600080fd5b919050565b6000806040838503121561014d57600080fd5b61015683610111565b915060208301357fffffffff000000000000000000000000000000000000000000000000000000008116811461018b57600080fd5b809150509250929050565b6000806000806000608086880312156101ae57600080fd5b6101b786610111565b945060208601359350604086013567ffffffffffffffff808211156101db57600080fd5b818801915088601f8301126101ef57600080fd5b8135818111156101fe57600080fd5b89602082850101111561021057600080fd5b60208301955080945050505060608601356002811061022e57600080fd5b809150509295509295909350565b6000808585111561024c57600080fd5b8386111561025957600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156102a65780818660040360031b1b83161692505b50509291505056fea26469706673582212207c9b2fac2a147ce69f3533e337163aab118ecfb52cc5ba27f3f9cd606fe4b93464736f6c63430008110033a264697066735822122048971dc68cafab7c5efed2a709e3487918632a650039f487e63275045a87055064736f6c63430008110033";

type FunctionSignaturePolicyFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FunctionSignaturePolicyFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FunctionSignaturePolicyFactory__factory extends ContractFactory {
  constructor(...args: FunctionSignaturePolicyFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FunctionSignaturePolicyFactory> {
    return super.deploy(
      overrides || {}
    ) as Promise<FunctionSignaturePolicyFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FunctionSignaturePolicyFactory {
    return super.attach(address) as FunctionSignaturePolicyFactory;
  }
  override connect(signer: Signer): FunctionSignaturePolicyFactory__factory {
    return super.connect(signer) as FunctionSignaturePolicyFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FunctionSignaturePolicyFactoryInterface {
    return new utils.Interface(_abi) as FunctionSignaturePolicyFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FunctionSignaturePolicyFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FunctionSignaturePolicyFactory;
  }
}

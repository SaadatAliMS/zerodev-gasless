/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  UpdateSingleton,
  UpdateSingletonInterface,
} from "../UpdateSingleton";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "singleton",
        type: "address",
      },
    ],
    name: "ChangedMasterCopy",
    type: "event",
  },
  {
    inputs: [],
    name: "self",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetSingleton",
        type: "address",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50306080526080516102f9610036600039600081816055015261015f01526102f96000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631c1b87721461003b5780637104ddb214610050575b600080fd5b61004e610049366004610286565b6100a0565b005b6100777f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b73ffffffffffffffffffffffffffffffffffffffff8116610148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f76696460448201527f656400000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016300361020d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f4d6967726174696f6e2073686f756c64206f6e6c792062652063616c6c65642060448201527f7669612064656c656761746563616c6c00000000000000000000000000000000606482015260840161013f565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f75e41bc35ff1bf14d81d1d2f649c0084a0f974f9289c803ec9898eeec4c8d0b89060200160405180910390a150565b60006020828403121561029857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146102bc57600080fd5b939250505056fea2646970667358221220c320909f8b84b997f7e974dff71f9816411a72d71eb404294986c596190fc6bf64736f6c63430008110033";

type UpdateSingletonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpdateSingletonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpdateSingleton__factory extends ContractFactory {
  constructor(...args: UpdateSingletonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UpdateSingleton> {
    return super.deploy(overrides || {}) as Promise<UpdateSingleton>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UpdateSingleton {
    return super.attach(address) as UpdateSingleton;
  }
  override connect(signer: Signer): UpdateSingleton__factory {
    return super.connect(signer) as UpdateSingleton__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpdateSingletonInterface {
    return new utils.Interface(_abi) as UpdateSingletonInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpdateSingleton {
    return new Contract(address, _abi, signerOrProvider) as UpdateSingleton;
  }
}

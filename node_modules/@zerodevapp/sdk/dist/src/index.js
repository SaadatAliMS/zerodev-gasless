"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProjectsConfiguration = exports.initiateProject = exports.asZeroDevSigner = exports.isZeroDevSigner = exports.getZeroDevSignerV2 = exports.getZeroDevSigner = exports.getZeroDevProviderV2 = exports.getZeroDevProvider = exports.revokeSessionKey = exports.createSessionKeySigner = exports.createSessionKey = exports.getRPCProviderOwner = exports.getPrivateKeyOwner = exports.ZeroDevProvider = exports.AssetType = exports.ZeroDevSigner = void 0;
require("@ethersproject/shims");
const buffer_1 = require("buffer");
const utils_1 = require("./utils");
const api = __importStar(require("./api"));
const constants = __importStar(require("./constants"));
const ZeroDevSigner_1 = require("./ZeroDevSigner");
const Provider_1 = require("./Provider");
const accounts_1 = require("./accounts");
const paymasters_1 = require("./paymasters");
global.Buffer = buffer_1.Buffer;
var ZeroDevSigner_2 = require("./ZeroDevSigner");
Object.defineProperty(exports, "ZeroDevSigner", { enumerable: true, get: function () { return ZeroDevSigner_2.ZeroDevSigner; } });
Object.defineProperty(exports, "AssetType", { enumerable: true, get: function () { return ZeroDevSigner_2.AssetType; } });
var ZeroDevProvider_1 = require("./ZeroDevProvider");
Object.defineProperty(exports, "ZeroDevProvider", { enumerable: true, get: function () { return ZeroDevProvider_1.ZeroDevProvider; } });
var owner_1 = require("./owner");
Object.defineProperty(exports, "getPrivateKeyOwner", { enumerable: true, get: function () { return owner_1.getPrivateKeyOwner; } });
Object.defineProperty(exports, "getRPCProviderOwner", { enumerable: true, get: function () { return owner_1.getRPCProviderOwner; } });
var session_1 = require("./session");
Object.defineProperty(exports, "createSessionKey", { enumerable: true, get: function () { return session_1.createSessionKey; } });
Object.defineProperty(exports, "createSessionKeySigner", { enumerable: true, get: function () { return session_1.createSessionKeySigner; } });
Object.defineProperty(exports, "revokeSessionKey", { enumerable: true, get: function () { return session_1.revokeSessionKey; } });
async function getZeroDevProvider(params) {
    var _a, _b, _c, _d, _e, _f;
    const chainId = await api.getChainId(params.projectId, constants.BACKEND_URL);
    const provider = (_a = params.rpcProvider) !== null && _a !== void 0 ? _a : (await (0, utils_1.getProvider)(chainId, (0, utils_1.getRpcUrl)(chainId), params.useWebsocketProvider, params.skipFetchSetup));
    const aaConfig = {
        projectId: params.projectId,
        chainId,
        entryPointAddress: constants.ENTRYPOINT_ADDRESS,
        bundlerUrl: (_b = params.bundlerUrl) !== null && _b !== void 0 ? _b : constants.BUNDLER_URL,
        paymasterAPI: await (0, paymasters_1.getPaymaster)(params.projectId, constants.PAYMASTER_URL, chainId, constants.ENTRYPOINT_ADDRESS, params.paymasterProvider, params.gasToken),
        hooks: params.hooks,
        walletAddress: params.address,
        index: params.index,
        implementation: (_c = params.implementation) !== null && _c !== void 0 ? _c : accounts_1.kernelAccount_v1_audited,
        maxTxRetries: (_d = params.maxTxRetries) !== null && _d !== void 0 ? _d : constants.DEFAULT_MAX_TX_RETRIES
    };
    const bundlerProvider = (_e = params.bundlerProvider) !== null && _e !== void 0 ? _e : ((_f = params.paymasterProvider) !== null && _f !== void 0 ? _f : undefined);
    const aaProvider = await (0, Provider_1.wrapProvider)(provider, aaConfig, params.owner, { skipFetchSetup: params.skipFetchSetup, transactionTimeout: params.transactionTimeout, bundlerProvider, bundlerGasCalculation: params.bundlerGasCalculation, onlySendSponsoredTransaction: params.onlySendSponsoredTransaction });
    return aaProvider;
}
exports.getZeroDevProvider = getZeroDevProvider;
async function getZeroDevProviderV2(params, validator, defaultValidator) {
    var _a, _b, _c, _d;
    const chainId = await api.getChainId(params.projectId, constants.BACKEND_URL);
    const provider = (_a = params.rpcProvider) !== null && _a !== void 0 ? _a : (await (0, utils_1.getProvider)(chainId, (0, utils_1.getRpcUrl)(chainId), params.useWebsocketProvider, params.skipFetchSetup));
    const aaConfig = {
        projectId: params.projectId,
        chainId,
        entryPointAddress: constants.ENTRYPOINT_ADDRESS,
        bundlerUrl: (_b = params.bundlerUrl) !== null && _b !== void 0 ? _b : constants.BUNDLER_URL,
        paymasterAPI: await (0, paymasters_1.getPaymaster)(params.projectId, constants.PAYMASTER_URL, chainId, constants.ENTRYPOINT_ADDRESS, params.paymasterProvider, params.gasToken),
        hooks: params.hooks,
        walletAddress: params.address,
        index: params.index,
        implementation: (_c = params.implementation) !== null && _c !== void 0 ? _c : accounts_1.kernelAccount_v2_audited,
        maxTxRetries: (_d = params.maxTxRetries) !== null && _d !== void 0 ? _d : constants.DEFAULT_MAX_TX_RETRIES
    };
    const aaProvider = await (0, Provider_1.wrapV2Provider)(provider, aaConfig, params.owner, (defaultValidator != null) ? defaultValidator : validator, validator, { skipFetchSetup: params.skipFetchSetup, bundlerGasCalculation: true, transactionTimeout: params.transactionTimeout });
    return aaProvider;
}
exports.getZeroDevProviderV2 = getZeroDevProviderV2;
async function getZeroDevSigner(params) {
    const aaProvider = await getZeroDevProvider(params);
    const aaSigner = aaProvider.getSigner();
    return aaSigner;
}
exports.getZeroDevSigner = getZeroDevSigner;
async function getZeroDevSignerV2(params, validator, defaultValidator) {
    const aaProvider = await getZeroDevProviderV2(params, validator, defaultValidator);
    const aaSigner = aaProvider.getSigner();
    return aaSigner;
}
exports.getZeroDevSignerV2 = getZeroDevSignerV2;
// Check if a signer is a ZeroDevSigner
async function isZeroDevSigner(signer) {
    return signer instanceof ZeroDevSigner_1.ZeroDevSigner;
}
exports.isZeroDevSigner = isZeroDevSigner;
// Typecast a signer to a ZeroDevSigner, or throw if it's not a ZeroDevSigner
function asZeroDevSigner(signer) {
    if (!(signer instanceof ZeroDevSigner_1.ZeroDevSigner)) {
        throw new Error('not a ZeroDevSigner');
    }
    return signer;
}
exports.asZeroDevSigner = asZeroDevSigner;
async function initiateProject(projectIds) {
    void api.getProjectsConfiguration(projectIds, constants.BACKEND_URL);
}
exports.initiateProject = initiateProject;
exports.getProjectsConfiguration = api.getProjectsConfiguration;
//# sourceMappingURL=index.js.map